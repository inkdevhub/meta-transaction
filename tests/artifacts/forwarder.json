{
  "source": {
    "hash": "0x107bac80dbc9be424dd0f188ba20446b1847c7765cb60247050d3ae9a5e0e4dd",
    "language": "ink! 4.0.1",
    "compiler": "rustc 1.68.0-nightly",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "2.0.2",
      "rust_toolchain": "nightly-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "forwarder",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [],
        "docs": [],
        "label": "default",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 1
        },
        "selector": "0xed4b9d1b"
      }
    ],
    "docs": [],
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "callee",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "encoded_transaction",
            "type": {
              "displayName": [
                "Transaction"
              ],
              "type": 8
            }
          }
        ],
        "docs": [
          " A meta-transaction was executed"
        ],
        "label": "Executed"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 3
    },
    "messages": [
      {
        "args": [
          {
            "label": "address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 4
            }
          }
        ],
        "docs": [
          " Get the nonce for the given account"
        ],
        "label": "get_nonce",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 7
        },
        "selector": "0xd9a8c128"
      },
      {
        "args": [
          {
            "label": "req",
            "type": {
              "displayName": [
                "Transaction"
              ],
              "type": 8
            }
          },
          {
            "label": "signature",
            "type": {
              "displayName": [],
              "type": 13
            }
          }
        ],
        "docs": [
          " Verifies that a transaction matches its supplied signature."
        ],
        "label": "verfiy",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0x829d008a"
      },
      {
        "args": [
          {
            "label": "req",
            "type": {
              "displayName": [
                "Transaction"
              ],
              "type": 8
            }
          },
          {
            "label": "signature",
            "type": {
              "displayName": [],
              "type": 13
            }
          }
        ],
        "docs": [
          " Call a meta transaction. The transaction calling this fn must contain a valid transaction inside it that is passed to this fn as `req`.",
          " `req` will be verified by `verify` using the supplied `signature`. If the transaction is signed correctly, it will be executed."
        ],
        "label": "execute",
        "mutates": true,
        "payable": true,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xd00ec894"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0xc4ddfe1f",
                      "ty": 0
                    }
                  },
                  "root_key": "0xc4ddfe1f"
                }
              },
              "name": "nonces"
            }
          ],
          "name": "Forwarder"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 2
          },
          {
            "name": "E",
            "type": 3
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 5,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 6
          }
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 3
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "from",
                "type": 4,
                "typeName": "AccountId"
              },
              {
                "name": "callee",
                "type": 4,
                "typeName": "AccountId"
              },
              {
                "name": "selector",
                "type": 9,
                "typeName": "[u8; 4]"
              },
              {
                "name": "input",
                "type": 10,
                "typeName": "Vec<u8>"
              },
              {
                "name": "transferred_value",
                "type": 0,
                "typeName": "Balance"
              },
              {
                "name": "gas_limit",
                "type": 11,
                "typeName": "u64"
              },
              {
                "name": "allow_reentry",
                "type": 12,
                "typeName": "bool"
              },
              {
                "name": "nonce",
                "type": 0,
                "typeName": "Nonce"
              },
              {
                "name": "expiration_time_seconds",
                "type": 11,
                "typeName": "Timestamp"
              }
            ]
          }
        },
        "path": [
          "forwarder",
          "forwarder",
          "Transaction"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "array": {
            "len": 4,
            "type": 6
          }
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "sequence": {
            "type": 6
          }
        }
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "array": {
            "len": 65,
            "type": 6
          }
        }
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 15
          },
          {
            "name": "E",
            "type": 3
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 16
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 2
          },
          {
            "name": "E",
            "type": 16
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "BadSignature"
              },
              {
                "index": 1,
                "name": "TransactionFailed"
              },
              {
                "index": 2,
                "name": "ValueTransferMismatch"
              },
              {
                "index": 3,
                "name": "TransactionExpired"
              },
              {
                "index": 4,
                "name": "IncorrectNonce"
              },
              {
                "index": 5,
                "name": "IncorrectSignature"
              }
            ]
          }
        },
        "path": [
          "forwarder",
          "forwarder",
          "Error"
        ]
      }
    }
  ],
  "version": "4"
}